<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>


	<!-- 修改webapp.root这个变量名为：ssh.root 作用是：可以做到每个系统，都有单独的项目部署路径，可以写在log4j.xml配置文件中，达到兼容操作系统的目的 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>telecomproject.root</param-value>
	</context-param>



	<!-- 指定Log4j日志配置文件的位置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>



	<!-- spring容器间隔60秒，扫描1次log4j.xml配置文件，查看最新的变化 -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>



	<!-- 指定spring容器配置文件的位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml,
					 classpath:applicationContext-shiro.xml</param-value>
	</context-param>


	<!-- 配置字符过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.telecom.project.filter.EncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<!-- 配置路径乱码处理过滤器：/users/张/123456 -->
	<filter>
		<filter-name>httpRestFormUrlFilter</filter-name>
		<filter-class>com.telecom.project.filter.HttpRestFormUrlFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<!-- 该过滤器的作用：通过隐藏属性，完成对HTTP提交方法的修改 -->
	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>



	<!-- 配置PUT请求，表单数据过滤器，目的：为了PUT请求，也采用POST请求一样，使用消息体来作为数据传输的载体 -->
	<filter>
		<filter-name>httpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>

	<!-- 配置DELETE请求，表单数据过滤器，目的：为了DELETE请求，也采用POST请求一样，使用消息体来作为数据传输的载体 -->
	<filter>
		<filter-name>httpDeleteFormContentFilter</filter-name>
		<filter-class>com.telecom.project.filter.HttpDeleteFormContentFilter</filter-class>
	</filter>

	<!-- 在同一视图范围内，spring容器需要保持Session不关闭，从而解决：延迟加载过程中，no session的问题 -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	</filter>
	
	<!-- shiro过滤器定义 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<!-- 该值缺省为false，表示生命周期由SpringApplicationContext管理，设置为true则表示由ServletContainer管理 -->
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>httpRestFormUrlFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>httpPutFormContentFilter</filter-name>
		<servlet-name>mvc</servlet-name>
	</filter-mapping>

	<filter-mapping>
		<filter-name>httpDeleteFormContentFilter</filter-name>
		<servlet-name>mvc</servlet-name>
	</filter-mapping>

	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<servlet-name>mvc</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- 还需要配置各种过滤器：状态过滤器、特殊字符过滤器…… -->

	<!-- 使用 ContextLoaderListener 开启spring容器，为：除了WEB层的组件，提供一个运行环境 并且将spring容器向WEB容器进行注册 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>





	<!-- 配置springmvc的前端控制器 -->
	<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 配置欢迎界面 -->
	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>



</web-app>
